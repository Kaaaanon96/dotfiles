[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_types = 1
  let g:go_highlight_operators = 1
  let g:go_highlight_build_vonstraints = 1

  let g:go_fmt_fail_silently = 1
  let g:go_fmt_autosave = 0
  let g:go_fmt_command = "goimports"

  let g:go_gocode_unimported_packages = 1
'''

[[plugins]]
repo = 'zchee/deoplete-go'
on_ft = 'go'
build = 'make'
hook_add = '''
  let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
'''

[[plugins]]
repo = 'jstemmer/gotags'
on_ft = ['go']
hook_add = '''
  let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
      \ 'p:package',
      \ 'i:imports:1',
      \ 'c:constants',
      \ 'v:variables',
      \ 't:types',
      \ 'n:interfaces',
      \ 'w:fields',
      \ 'e:embedded',
      \ 'm:methods',
      \ 'r:constructor',
      \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
      \ 't' : 'ctype',
      \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
      \ 'ctype' : 't',
      \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
  \ }

'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'uplus/deoplete-solargraph'
on_ft = 'ruby'

[[plugins]]
repo = 'osyo-manga/vim-monster'
hook_source = '''
  let g:monster#completion#backend = 'solargraph'
  let g:monster#completion#solargraph#backend = "async_solargraph_suggest"
  let g:deoplete#sources#omni#input_patterns = {
    \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
    \}
'''

[[plugins]]
repo = 'lvht/phpcd.vim'
on_ft = 'php'
hook_post_source = '''
  let g:deoplete#ignore_sources = get(g:, 'deoplete#ignore_sources', {})
  let g:deoplete#ignore_sources.php = ['omni']
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
depends = ['vim-hug-neovim-rpc','nvim-yarp']
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''
hook_post_source = '''
  call deoplete#custom#option('smart_case', v:true)
  call deoplete#custom#option('ignore_case', v:false)
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_post_source = '''
  call denite#custom#var('file_rec', 'command', ['rg', '-uu', '--files', '--glob', '!.git'])
  call denite#custom#var('grep', 'command', ['rg'])
	call denite#custom#var('grep', 'default_opts', ['-uu', '--vimgrep', '--no-heading'])
	call denite#custom#var('grep', 'recursive_opts', [])
	call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
	call denite#custom#var('grep', 'separator', ['--'])
	call denite#custom#var('grep', 'final_opts', [])

	call denite#custom#map('insert', '<C-a>', '<denite:move_caret_to_head>', 'noremap')
	call denite#custom#map('insert', '<C-j>', '<denite:move_to_next_line>', 'noremap')
	call denite#custom#map('insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')
	call denite#custom#map('insert', '<C-f>', '<denite:scroll_page_forwards>', 'noremap')
	call denite#custom#map('insert', '<C-b>', '<denite:scroll_page_backwards>', 'noremap')

  call denite#custom#map('insert', '<C-i>', '<denite:do_action:split>')
  call denite#custom#map('insert', '<C-v>', '<denite:do_action:vsplit>')
  call denite#custom#map('normal', '<C-i>', '<denite:do_action:split>')
  call denite#custom#map('normal', '<C-v>', '<denite:do_action:vsplit>')

  call denite#custom#source('grep', 'converters', ['converter/abbr_word'])
'''
hook_add = '''
  nnoremap <C-u><C-p> :<C-u>Denite file_rec -highlight-mode-insert=Search<CR>
  nnoremap <C-u><C-b> :<C-u>Denite buffer<CR>
  nnoremap <C-u><C-g> :<C-u>Denite grep -highlight-mode-insert=Search<CR>
  nnoremap <C-u><C-r> :<C-u>Denite -resume<CR>
  nnoremap <C-u><C-n> :<C-u>Denite -resume -cursor-pos=+1 -immediately<CR>
  nnoremap <C-u><C-o> :<C-u>Denite outline -highlight-mode-insert=Search -post-action=open -split=vertical -winwidth=40<CR>
  nnoremap <expr> <C-u><C-]> &filetype == 'help' ? "g\<C-]>" : ":\<C-u>DeniteCursorWord tag -highlight-mode-insert=Search\<CR>"

  tnoremap <C-u><C-y> <C-w>:Denite register<CR>
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'eruby', 'php']

[[plugins]]
repo = 'gabrielelana/vim-markdown'
on_ft = 'markdown'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['html', 'css']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'javascript.jsx', 'jsx']


